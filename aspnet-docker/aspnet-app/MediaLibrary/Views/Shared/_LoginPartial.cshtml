@using Microsoft.AspNetCore.Identity
@using MediaLibrary.Areas.Identity.Data
@using System.Security.Claims

@inject SignInManager<MediaLibraryUser> SignInManager
@inject UserManager<MediaLibraryUser> UserManager

@{
    var user = await UserManager.GetUserAsync(User);
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a id="manage" class="nav-link textColor" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Bonjour @user.FirstName</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link textColor">Déconnexion</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link textColor" id="register" asp-area="Identity" asp-page="/Account/Register">S'enregistrer</a>
    </li>
    <li class="nav-item">
        <a class="nav-link textColor" id="login" asp-area="Identity" asp-page="/Account/Login">Se connecter</a>
    </li>
}
</ul>
